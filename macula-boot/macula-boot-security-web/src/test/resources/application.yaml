spring:
  profiles:
    active: dev
  application:
    group: MACULA
    name: macula-boot-security-web
  messages:
    basename: classpath*:i18n/**/messages,classpath*:i18n/**/validation
  jpa:
    generate-ddl: false
    show-sql: false
    hibernate:
      ddl-auto: create-drop
  jdbc:
    template:
      fetch-size: -1
      max-rows: -1
  http:
    encoding:
      force: true
  session:
    redis:
      namespace: spring:session:${spring.application.group}
  mvc:
    static-path-pattern: /static/**
  h2:
    console:
      enabled: false

server:
  port: 8082
  servlet:
    session:
      cookie:
        name: s-${spring.application.group}-${spring.profiles}
        domain-name-pattern: ^.+?(\\..*?[\\w\\-]+\\.[a-zA-Z]+)$

macula:
  config:
    enable-escape-xss: true
    escape-xss-level: BASIC
  redis:
    - name: cache
      single-server-config:
        address: ${macula.redis.cache.url}
    - name: data
      single-server-config:
        address: ${macula.redis.data.url}
    - name: session
      single-server-config:
        address: ${macula.redis.data.url}
    - name: klock
      single-server-config:
        address: ${macula.redis.data.url}
  datasource:
    druid:
      - name: macula
        ## JDBC配置
        url: ${macula.datasource.macula.url}
        username: ${macula.datasource.macula.username}
        password: ${macula.datasource.macula.password}
        ## 连接池配置
        max-active: 100
        initial-size: 1
        max-wait: 60000
        min-idle: 1
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        validation-query: select '1'
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        pool-prepared-statements: true
        max-open-prepared-statements: 50
        max-pool-prepared-statement-per-connection-size: 20
        ## 过滤器配置
        filters: stat,wall
      - name: gbss
        ## JDBC配置
        url: ${macula.datasource.gbss.url}
        username: ${macula.datasource.gbss.username}
        password: ${macula.datasource.gbss.password}
        ## 连接池配置
        max-active: 100
        initial-size: 1
        max-wait: 60000
        min-idle: 1
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        validation-query: select '1'
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        pool-prepared-statements: true
        max-open-prepared-statements: 50
        max-pool-prepared-statement-per-connection-size: 20
        ## 过滤器配置
        filters: stat,wall
  jpa:
    repositories:
      - name: macula
        entity-packages: org.macula.boot
        repository-packages: org.macula.boot
        service-package: org.macula
      - name: gbss
        entity-packages: com.infinitus.gbss
        repository-packages: com.infinitus.gbss
        service-package: com.infinitus.gbss
---
spring:
  profiles: dev
  jpa:
    show-sql: true

macula:
  redis:
    cache:
      url: redis://localhost:6379
    data:
      url: redis://localhost:6379
    klock:
      url: redis://localhost:6379
  datasource:
    macula:
      url: jdbc:mysql://127.0.0.1:3306/macula4?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
      username: root
      password: mysql
    gbss:
      url: jdbc:mysql://127.0.0.1:3306/macula4?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
      username: root
      password: mysql
---
spring:
  profiles: test

macula:
  redis:
    cache:
      url: redis://localhost:6379
    data:
      url: redis://localhost:6379
    klock:
      url: redis://localhost:6379
  datasource:
    macula:
      url: jdbc:mysql://127.0.0.1:3306/macula4?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
      username: root
      password: mysql
    gbss:
      url: jdbc:mysql://127.0.0.1:3306/macula4?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
      username: root
      password: mysql