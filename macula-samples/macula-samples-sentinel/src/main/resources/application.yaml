spring:
  profiles:
    active: dev
  # 应用配置
  application:
    group: MACULA
    name: macula-samples-sentinel
  main:
    # Spring Boot 2.1 及以上需要设定
    allow-bean-definition-overriding: true
  cloud:
  ##########for dubbo##########
    nacos:
      # Nacos 服务发现与注册配置
      discovery:
        server-addr: ${macula.nacos.url}
        namespace: ${spring.application.group}
        group: DUBBO_${spring.profiles.active}
        username: ${macula.nacos.username}
        password: ${macula.nacos.password}
    zookeeper:
      enabled: false
    consul:
      enabled: false
    ### for sentinel ###
    sentinel:
      transport:
        port: 8720
        dashboard: ${macula.sentinel.dashboard}
      datasource:
        # 名称随意
        flow:
          nacos:
            server-addr: ${macula.nacos.url}
            dataId: ${spring.application.name}-flow-rules
            namespace: SENTINEL
            username: ${macula.nacos.username}
            password: ${macula.nacos.password}
            # 规则类型，取值见：
            # org.springframework.cloud.alibaba.sentinel.datasource.RuleType
            rule-type: flow
        degrade:
          nacos:
            server-addr: ${macula.nacos.url}
            dataId: ${spring.application.name}-degrade-rules
            namespace: SENTINEL
            username: ${macula.nacos.username}
            password: ${macula.nacos.password}
            rule-type: degrade
        system:
          nacos:
            server-addr: ${macula.nacos.url}
            dataId: ${spring.application.name}-system-rules
            namespace: SENTINEL
            username: ${macula.nacos.username}
            password: ${macula.nacos.password}
            rule-type: system
        authority:
          nacos:
            server-addr: ${macula.nacos.url}
            dataId: ${spring.application.name}-authority-rules
            namespace: SENTINEL
            username: ${macula.nacos.username}
            password: ${macula.nacos.password}
            rule-type: authority
        param-flow:
          nacos:
            server-addr: ${macula.nacos.url}
            dataId: ${spring.application.name}-param-flow-rules
            namespace: SENTINEL
            username: ${macula.nacos.username}
            password: ${macula.nacos.password}
            rule-type: param-flow
eureka:
  client:
    enabled: false
server:
  port: 8090

macula:
  datasource:
    druid:
      - name: macula-samples
        ## JDBC配置
        url: ${macula.datasource.macula-samples.url}
        username: ${macula.datasource.macula-samples.username}
        password: ${macula.datasource.macula-samples.password}
        ## 连接池配置
        max-active: 100
        initial-size: 1
        max-wait: 60000
        min-idle: 1
        time-between-eviction-runs-millis: 60000
        min-evictable-idle-time-millis: 300000
        validation-query: select '1'
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        pool-prepared-statements: true
        max-open-prepared-statements: 50
        max-pool-prepared-statement-per-connection-size: 20
        ## 过滤器配置
        filters: stat,wall
  jpa:
    repositories:
      - name: macula-samples
        entity-packages: org.macula.samples
        repository-packages: org.macula.samples
        service-package: org.macula.samples

###########dubbo配置###############
dubbo:
  registry:
    # 挂载到 Spring Cloud 注册中心
    address: spring-cloud://localhost
  cloud:
    subscribed-services: macula-samples-dubbo
  protocol:
    # dubbo 协议
    name: dubbo
    # dubbo 协议端口（ -1 表示自增端口，从 20880 开始）
    port: -1
---
spring:
  profiles: dev

macula:
  datasource:
    macula-samples:
      url: jdbc:mysql://127.0.0.1:3306/macula-samples?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
      username: root
      password: mysql
  nacos:
    url: 127.0.0.1:8848
    username: macula
    password: macula123
  sentinel:
    dashboard: 127.0.0.1:8080