<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.maculaframework</groupId>
        <artifactId>macula-framework-build</artifactId>
        <version>${revision}</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>macula-parent</artifactId>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdkLevel>1.8</jdkLevel>
        <spring-boot.version>2.3.2.RELEASE</spring-boot.version>
        <spring-cloud-alibaba.version>2.2.3.RELEASE</spring-cloud-alibaba.version>
        <spring-cloud-openfeign.version>2.2.5.RELEASE</spring-cloud-openfeign.version>
        <sentinel.version>1.8.0</sentinel.version>
        <commons-text.version>1.6</commons-text.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <commons-io.version>2.7</commons-io.version>
        <poi.version>4.1.1</poi.version>
        <zxing.version>3.3.3</zxing.version>
        <kryo.version>5.1.1</kryo.version>
        <fst.version>2.57</fst.version>
        <jsoup.version>1.11.3</jsoup.version>
        <druid.version>1.1.14</druid.version>
        <redisson.version>3.15.6</redisson.version>
        <modelmapper.version>2.3.0</modelmapper.version>
        <jasypt-spring-boot.version>2.1.1</jasypt-spring-boot.version>
        <kaptcha.version>2.3.2</kaptcha.version>
        <logstash.version>5.2</logstash.version>
        <springdoc.version>1.5.9</springdoc.version>
    </properties>

    <dependencies>
        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Provider -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Optional -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-openfeign-dependencies</artifactId>
                <version>${spring-cloud-openfeign.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-boot-core</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-boot-api</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-boot-security-oauth2</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-boot-security-web</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-boot-web</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-boot-utils</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-cloud-apm</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-cloud-base</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-cloud-batch</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-cloud-bus</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-cloud-dubbo</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-cloud-msg</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-cloud-nacos</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-cloud-oss</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-cloud-seata</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-cloud-sentinel</artifactId>
                <version>${revision}</version>
            </dependency>

            <dependency>
                <groupId>org.maculaframework</groupId>
                <artifactId>macula-cloud-stream</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- jsoup HTML parser library @ https://jsoup.org/ -->
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${jsoup.version}</version>
            </dependency>

            <!-- commons -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <!-- kryo -->
            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>${kryo.version}</version>
            </dependency>

            <dependency>
                <groupId>de.ruedigermoeller</groupId>
                <artifactId>fst</artifactId>
                <version>${fst.version}</version>
            </dependency>

            <!-- druid DataSource -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-data-22</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.modelmapper</groupId>
                <artifactId>modelmapper</artifactId>
                <version>${modelmapper.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt-spring-boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>core</artifactId>
                <version>${zxing.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>javase</artifactId>
                <version>${zxing.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.penggle</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-webmvc-core</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.1.0</version>
                <configuration>
                    <!-- 是否更新pom文件，此处还有更高级的用法 -->
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>${jdkLevel}</source>
                    <target>${jdkLevel}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>false</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>macula-repo</id>
            <name>macula-repo</name>
            <url>http://maven.infinitus.com.cn:8081/nexus/content/groups/public</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>macula-repo</id>
            <name>macula-repo</name>
            <url>http://maven.infinitus.com.cn:8081/nexus/content/groups/public</url>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <repository>
            <id>nexus</id>
            <name>ReleasesProxy</name>
            <url>http://maven.infinitus.com.cn:8081/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>nexus</id>
            <name>SnapshotsProxy</name>
            <url>http://maven.infinitus.com.cn:8081/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>